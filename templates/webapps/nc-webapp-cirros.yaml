heat_template_version: '2014-10-16'

description: |
  Simplest webapp using netcat (custom fit for CirrOS).
  Check the webapp reporting the hostname with
  heat output-show <stack-name> webapp | xargs curl

parameters:
  flavor:
   type: string
   default: m1.nano
  image:
    type: string
    default: cirros-0.3.2-x86_64-uec
  port:
    type: number
    default: 80

resources:

  secgroup:
    type: OS::Neutron::SecurityGroup
    properties:
      rules:
        - direction: ingress
          ethertype: IPv4
          protocol: tcp
          port_range_max: { get_param: port }
          port_range_min: { get_param: port }
          remote_ip_prefix: '0.0.0.0/0'

  server:
    type: OS::Nova::Server
    properties:
      image: { get_param: image }
      flavor: { get_param: flavor }
      security_groups:
        - { get_resource: secgroup }
      user_data_format: RAW
      user_data:
        str_replace:
          template: |
            #! /bin/sh -v
            wc_notify --data-binary '{"status": "SUCCESS"}'
            while true ; do echo -e "HTTP/1.1 200 OK\r\n\r\n$(cat /etc/hostname)" | nc -llp PORT; done
          params:
            PORT: { get_param: port }
            wc_notify: { get_attr: [ handle, curl_cli ] }

  handle:
    type: OS::Heat::WaitConditionHandle

  waiter:
    type: OS::Heat::WaitCondition
    depends_on: server
    properties:
      count: 1
      timeout: 600
      handle: { get_resource: handle }

outputs:
  webapp:
    description: URL of the webapp
    value:
      str_replace:
        template: http://SERVER_IP:PORT
        params:
          SERVER_IP: { get_attr: [ server, networks, private, 0 ] }
          PORT: { get_param: port }
