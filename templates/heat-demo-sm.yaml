heat_template_version: 2013-05-23

description: >
  Heat Tomcat + PostgreSQL template

parameters:
  key_name:
    type: string
    default: test-key
    description: ssh key

resources:
  AppWaitHandle: 
    type: AWS::CloudFormation::WaitConditionHandle
  
  AppWaitCondition:
    type: AWS::CloudFormation::WaitCondition
    depends_on: ApplicationServer
    properties:
      Handle: { get_resource: AppWaitHandle }
      Count: 1
      Timeout: 600
  
  DbWaitHandle: 
    type: AWS::CloudFormation::WaitConditionHandle
  
  DbWaitCondition:
    type: AWS::CloudFormation::WaitCondition
    depends_on: DatabaseServer
    properties:
      Handle: { get_resource: DbWaitHandle }
      Count: 1
      Timeout: 600

  ApplicationServer:
    type: OS::Nova::Server
    properties:
      image: cloud-fedora
      flavor: m1.small
      key_name: { get_param: key_name }
      user_data:
        str_replace:
          template: |
            #!/bin/bash -v
            yum -y install tomcat tomcat-webapps tomcat-admin-webapps
            systemctl enable tomcat.service  
            systemctl start tomcat.service
            /opt/aws/bin/cfn-signal -i 'appserver' -e 0 'signalhandle'
          params:
            signalhandle: { get_resource: AppWaitHandle }

  DatabaseServer:
    type: OS::Nova::Server
    properties:
      image: cloud-fedora
      flavor: m1.small
      key_name: { get_param: key_name }
      user_data:
        str_replace:
          template: |
            #!/bin/bash -v
            yum -y install postgresql-server postgresql-contrib
            postgresql-setup initdb
            systemctl enable postgresql.service  
            systemctl start postgresql.service
            /opt/aws/bin/cfn-signal -i 'dbserver' -e 0 'signalhandle'
          params:
            signalhandle: { get_resource: DbWaitHandle }
    
outputs:
  ApplicationServerIP:
    description: URL for application server
    value: { get_attr: [ApplicationServer, first_address] }
  DbServerIP:
    description: URL for application server
    value: { get_attr: [DatabaseServer, first_address] }
