heat_template_version: 2015-10-15

description: |
  Test Heat autoscaling based on Ceilometer metering and alarms.
  CPU loading commands are optimized for the standard minimal Cirros image.

parameters:
  key_name:
    type: string
    default: demo
  flavor:
    type: string
    default: m1.nano
  image:
    type: string
    default: cirros

resources:

  sec_group:
    type: OS::Neutron::SecurityGroup
    properties:
      rules:
      - remote_ip_prefix: 0.0.0.0/0
        protocol: tcp
        port_range_min: 22
        port_range_max: 22

  my_asg:
    type: OS::Heat::AutoScalingGroup
    properties:
      resource:
        type: OS::Nova::Server
        properties:
          metadata: {"metering.stack": {get_param: "OS::stack_id"}}
          key_name: { get_param: key_name }
          image: { get_param: image }
          flavor: { get_param: flavor }
          security_groups:
          - get_resource: sec_group
      min_size: 1
      max_size: 2

  scale_up_policy:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: {get_resource: my_asg}
      cooldown: 60
      scaling_adjustment: 1

  scale_down_policy:
    type: OS::Heat::ScalingPolicy
    properties:
      adjustment_type: change_in_capacity
      auto_scaling_group_id: {get_resource: my_asg}
      cooldown: 60
      scaling_adjustment: '-1'

  cpu_alarm_high:
    type: OS::Ceilometer::Alarm
    properties:
      description: Scale-up if the average CPU > 50% for 1 minute
      meter_name: cpu_util
      statistic: avg
      period: 60
      evaluation_periods: 1
      threshold: 50
      alarm_actions:
        - {get_attr: [scale_up_policy, alarm_url]}
      matching_metadata: {'metadata.user_metadata.stack': {get_param: "OS::stack_id"}}
      comparison_operator: gt

  cpu_alarm_low:
    type: OS::Ceilometer::Alarm
    properties:
      description: Scale-down if the average CPU < 15% for 10 minutes
      meter_name: cpu_util
      statistic: avg
      period: 60
      evaluation_periods: 1
      threshold: 15
      alarm_actions:
        - {get_attr: [scale_down_policy, alarm_url]}
      matching_metadata: {'metadata.user_metadata.stack': {get_param: "OS::stack_id"}}
      comparison_operator: lt

outputs:
  load_cpu:
    description: |
      command to use to load the CPU of Cirros-based VM,
      modify location of the private key
    value:
      str_replace:
        template: ssh cirros@IP -i KEY.pem "cat /dev/urandom | gzip -9 > /dev/null &"
        params:
          IP: { get_attr: [ my_asg, resource.0, networks, private, 0 ] }
          KEY: { get_param: key_name }
  release_cpu:
    description: |
      command to use to release the CPU load of Cirros-based VM,
      modify location of the private key
    value:
      str_replace:
        template: ssh cirros@IP -i KEY.pem "kill -9 \$(ps -ef | grep 'cat /dev/urandom' | grep -v grep | awk '{print \$1}')"
        params:
          IP: { get_attr: [ my_asg, resource.0, networks, private, 0 ] }
          KEY: { get_param: key_name }
